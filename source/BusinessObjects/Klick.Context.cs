//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessObjects
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;
    
    using System.Linq;
    
    public partial class KlickEntities : DbContext
    {
        public KlickEntities()
            : base("name=KlickEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AddressType> AddressTypes { get; set; }
        public DbSet<Adon> Adons { get; set; }
        public DbSet<AdonType> AdonTypes { get; set; }
        public DbSet<AdOnTypeInProduct> AdOnTypeInProducts { get; set; }
        public DbSet<BranchDeliveryArea> BranchDeliveryAreas { get; set; }
        public DbSet<Branch> Branches { get; set; }
        public DbSet<ContactAddress> ContactAddresses { get; set; }
        public DbSet<ContactInfo> ContactInfoes { get; set; }
        public DbSet<OptionType> OptionTypes { get; set; }
        public DbSet<OptionTypesInProduct> OptionTypesInProducts { get; set; }
        public DbSet<OrderDetailAdOn> OrderDetailAdOns { get; set; }
        public DbSet<OrderDetailOption> OrderDetailOptions { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<OrderStatu> OrderStatus { get; set; }
        public DbSet<OrderType> OrderTypes { get; set; }
        public DbSet<ProductAdon> ProductAdons { get; set; }
        public DbSet<ProductCategory> ProductCategories { get; set; }
        public DbSet<ProductOption> ProductOptions { get; set; }
        public DbSet<ProductOptionsInProduct> ProductOptionsInProducts { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductsChildRelationship> ProductsChildRelationships { get; set; }
        public DbSet<ProductsInBranch> ProductsInBranches { get; set; }
        public DbSet<UserLogin> UserLogins { get; set; }
        public DbSet<UserLoginType> UserLoginTypes { get; set; }
        public DbSet<OrderDetailSubProduct> OrderDetailSubProducts { get; set; }
        public DbSet<OrderDetailSubProductAdon> OrderDetailSubProductAdons { get; set; }
        public DbSet<OrderDetailSubProductOption> OrderDetailSubProductOptions { get; set; }
        public DbSet<ProductChildAdon> ProductChildAdons { get; set; }
        public DbSet<ProductChildProductOption> ProductChildProductOptions { get; set; }
        public DbSet<ProductActivation> ProductActivations { get; set; }
        public DbSet<SliderImage> SliderImages { get; set; }
        public DbSet<Log> Logs { get; set; }
        public DbSet<PromotionCode> PromotionCodes { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> Adon_AddAdon(string adOnName, Nullable<short> adonType, string imageName)
        {
            var adOnNameParameter = adOnName != null ?
                new ObjectParameter("AdOnName", adOnName) :
                new ObjectParameter("AdOnName", typeof(string));
    
            var adonTypeParameter = adonType.HasValue ?
                new ObjectParameter("AdonType", adonType) :
                new ObjectParameter("AdonType", typeof(short));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Adon_AddAdon", adOnNameParameter, adonTypeParameter, imageNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Adon_Deletedon(Nullable<short> adOnID)
        {
            var adOnIDParameter = adOnID.HasValue ?
                new ObjectParameter("AdOnID", adOnID) :
                new ObjectParameter("AdOnID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Adon_Deletedon", adOnIDParameter);
        }
    
        public virtual ObjectResult<Adon_GetAdon_Result> Adon_GetAdon(string adOnName, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var adOnNameParameter = adOnName != null ?
                new ObjectParameter("AdOnName", adOnName) :
                new ObjectParameter("AdOnName", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adon_GetAdon_Result>("Adon_GetAdon", adOnNameParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Adon_GetAdonById_Result> Adon_GetAdonById(Nullable<short> adOnID)
        {
            var adOnIDParameter = adOnID.HasValue ?
                new ObjectParameter("AdOnID", adOnID) :
                new ObjectParameter("AdOnID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adon_GetAdonById_Result>("Adon_GetAdonById", adOnIDParameter);
        }
    
        public virtual ObjectResult<Adon_GetAdonsByAdonTypeId_Result> Adon_GetAdonsByAdonTypeId(Nullable<short> adOnType)
        {
            var adOnTypeParameter = adOnType.HasValue ?
                new ObjectParameter("AdOnType", adOnType) :
                new ObjectParameter("AdOnType", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Adon_GetAdonsByAdonTypeId_Result>("Adon_GetAdonsByAdonTypeId", adOnTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Adon_UpdateAdon(Nullable<short> adOnID, string adOnName, Nullable<short> adonType, string imageName)
        {
            var adOnIDParameter = adOnID.HasValue ?
                new ObjectParameter("AdOnID", adOnID) :
                new ObjectParameter("AdOnID", typeof(short));
    
            var adOnNameParameter = adOnName != null ?
                new ObjectParameter("AdOnName", adOnName) :
                new ObjectParameter("AdOnName", typeof(string));
    
            var adonTypeParameter = adonType.HasValue ?
                new ObjectParameter("AdonType", adonType) :
                new ObjectParameter("AdonType", typeof(short));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Adon_UpdateAdon", adOnIDParameter, adOnNameParameter, adonTypeParameter, imageNameParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AdonType_AddAdonType(string adOnTypeName, Nullable<bool> isFreeAdonType, string imageName)
        {
            var adOnTypeNameParameter = adOnTypeName != null ?
                new ObjectParameter("AdOnTypeName", adOnTypeName) :
                new ObjectParameter("AdOnTypeName", typeof(string));
    
            var isFreeAdonTypeParameter = isFreeAdonType.HasValue ?
                new ObjectParameter("IsFreeAdonType", isFreeAdonType) :
                new ObjectParameter("IsFreeAdonType", typeof(bool));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AdonType_AddAdonType", adOnTypeNameParameter, isFreeAdonTypeParameter, imageNameParameter);
        }
    
        public virtual ObjectResult<AdonType_GetAdonType_Result> AdonType_GetAdonType(Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdonType_GetAdonType_Result>("AdonType_GetAdonType", pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<AdonType_GetAdonTypeById_Result> AdonType_GetAdonTypeById(Nullable<short> adOnTypeId)
        {
            var adOnTypeIdParameter = adOnTypeId.HasValue ?
                new ObjectParameter("AdOnTypeId", adOnTypeId) :
                new ObjectParameter("AdOnTypeId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdonType_GetAdonTypeById_Result>("AdonType_GetAdonTypeById", adOnTypeIdParameter);
        }
    
        public virtual ObjectResult<AdonType_GetAllAdonType_Result> AdonType_GetAllAdonType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdonType_GetAllAdonType_Result>("AdonType_GetAllAdonType");
        }
    
        public virtual ObjectResult<Nullable<int>> AdonType_UpdateAdonType(Nullable<short> adOnTypeId, string adOnTypeName, Nullable<bool> isFreeAdonType, string imageName)
        {
            var adOnTypeIdParameter = adOnTypeId.HasValue ?
                new ObjectParameter("AdOnTypeId", adOnTypeId) :
                new ObjectParameter("AdOnTypeId", typeof(short));
    
            var adOnTypeNameParameter = adOnTypeName != null ?
                new ObjectParameter("AdOnTypeName", adOnTypeName) :
                new ObjectParameter("AdOnTypeName", typeof(string));
    
            var isFreeAdonTypeParameter = isFreeAdonType.HasValue ?
                new ObjectParameter("IsFreeAdonType", isFreeAdonType) :
                new ObjectParameter("IsFreeAdonType", typeof(bool));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AdonType_UpdateAdonType", adOnTypeIdParameter, adOnTypeNameParameter, isFreeAdonTypeParameter, imageNameParameter);
        }
    
        public virtual ObjectResult<Branch_GetAllBranch_Result> Branch_GetAllBranch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Branch_GetAllBranch_Result>("Branch_GetAllBranch");
        }
    
        public virtual ObjectResult<Branch_GetBranchById_Result> Branch_GetBranchById(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Branch_GetBranchById_Result>("Branch_GetBranchById", branchIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Branch_IsStoreClose(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Branch_IsStoreClose", branchIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BranchProduct_AddUpdateProductInBranch(Nullable<int> branchID, Nullable<int> productID, Nullable<bool> enable, Nullable<double> price)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var enableParameter = enable.HasValue ?
                new ObjectParameter("Enable", enable) :
                new ObjectParameter("Enable", typeof(bool));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BranchProduct_AddUpdateProductInBranch", branchIDParameter, productIDParameter, enableParameter, priceParameter);
        }
    
        public virtual ObjectResult<BranchProduct_GetProductInBranchById_Result> BranchProduct_GetProductInBranchById(Nullable<long> branchProductID)
        {
            var branchProductIDParameter = branchProductID.HasValue ?
                new ObjectParameter("BranchProductID", branchProductID) :
                new ObjectParameter("BranchProductID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BranchProduct_GetProductInBranchById_Result>("BranchProduct_GetProductInBranchById", branchProductIDParameter);
        }
    
        public virtual int ContactAddress_UpdateContactAddress(Nullable<int> contactInfoId, string contactAddress)
        {
            var contactInfoIdParameter = contactInfoId.HasValue ?
                new ObjectParameter("ContactInfoId", contactInfoId) :
                new ObjectParameter("ContactInfoId", typeof(int));
    
            var contactAddressParameter = contactAddress != null ?
                new ObjectParameter("ContactAddress", contactAddress) :
                new ObjectParameter("ContactAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactAddress_UpdateContactAddress", contactInfoIdParameter, contactAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ContactInfo_UpdateContactInfo(Nullable<int> contactInfoId, string firstName, string lastName, string email, string telephone, string mobile, string contactAddress)
        {
            var contactInfoIdParameter = contactInfoId.HasValue ?
                new ObjectParameter("ContactInfoId", contactInfoId) :
                new ObjectParameter("ContactInfoId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var contactAddressParameter = contactAddress != null ?
                new ObjectParameter("ContactAddress", contactAddress) :
                new ObjectParameter("ContactAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ContactInfo_UpdateContactInfo", contactInfoIdParameter, firstNameParameter, lastNameParameter, emailParameter, telephoneParameter, mobileParameter, contactAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Log_AddNewLogEntry(string thread, string level, string logger, string message, string exception)
        {
            var threadParameter = thread != null ?
                new ObjectParameter("Thread", thread) :
                new ObjectParameter("Thread", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var loggerParameter = logger != null ?
                new ObjectParameter("Logger", logger) :
                new ObjectParameter("Logger", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var exceptionParameter = exception != null ?
                new ObjectParameter("Exception", exception) :
                new ObjectParameter("Exception", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Log_AddNewLogEntry", threadParameter, levelParameter, loggerParameter, messageParameter, exceptionParameter);
        }
    
        public virtual ObjectResult<Order_GetOrder_Result> Order_GetOrder(Nullable<int> branchId, Nullable<int> orderStatusId, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var orderStatusIdParameter = orderStatusId.HasValue ?
                new ObjectParameter("OrderStatusId", orderStatusId) :
                new ObjectParameter("OrderStatusId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Order_GetOrder_Result>("Order_GetOrder", branchIdParameter, orderStatusIdParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual int Order_GetOrderByContactInfoId(Nullable<int> contactInfoId)
        {
            var contactInfoIdParameter = contactInfoId.HasValue ?
                new ObjectParameter("ContactInfoId", contactInfoId) :
                new ObjectParameter("ContactInfoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Order_GetOrderByContactInfoId", contactInfoIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Order_SaleReport(Nullable<short> reportType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var reportTypeParameter = reportType.HasValue ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(short));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Order_SaleReport", reportTypeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<OrderDetail_GetOrderDetail_Result> OrderDetail_GetOrderDetail(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderDetail_GetOrderDetail_Result>("OrderDetail_GetOrderDetail", orderIdParameter);
        }
    
        public virtual int OrderDetailAdOns_AddOrderDetailAdOnsBulk(string orderDetailAdons, Nullable<long> orderDetailId, Nullable<bool> isOrderDetailAdon)
        {
            var orderDetailAdonsParameter = orderDetailAdons != null ?
                new ObjectParameter("OrderDetailAdons", orderDetailAdons) :
                new ObjectParameter("OrderDetailAdons", typeof(string));
    
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(long));
    
            var isOrderDetailAdonParameter = isOrderDetailAdon.HasValue ?
                new ObjectParameter("IsOrderDetailAdon", isOrderDetailAdon) :
                new ObjectParameter("IsOrderDetailAdon", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderDetailAdOns_AddOrderDetailAdOnsBulk", orderDetailAdonsParameter, orderDetailIdParameter, isOrderDetailAdonParameter);
        }
    
        public virtual int OrderDetailOptions_AddOrderDetailOptionsBulk(string orderDetailOptions, Nullable<long> orderDetailId, Nullable<bool> isOrderDetailOption)
        {
            var orderDetailOptionsParameter = orderDetailOptions != null ?
                new ObjectParameter("OrderDetailOptions", orderDetailOptions) :
                new ObjectParameter("OrderDetailOptions", typeof(string));
    
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(long));
    
            var isOrderDetailOptionParameter = isOrderDetailOption.HasValue ?
                new ObjectParameter("IsOrderDetailOption", isOrderDetailOption) :
                new ObjectParameter("IsOrderDetailOption", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderDetailOptions_AddOrderDetailOptionsBulk", orderDetailOptionsParameter, orderDetailIdParameter, isOrderDetailOptionParameter);
        }
    
        public virtual int OrderDetails_AddOrderDetailsBulk(string orderDetailXml, string orderDetailOptions, string orderDetailAdons, Nullable<long> orderId)
        {
            var orderDetailXmlParameter = orderDetailXml != null ?
                new ObjectParameter("OrderDetailXml", orderDetailXml) :
                new ObjectParameter("OrderDetailXml", typeof(string));
    
            var orderDetailOptionsParameter = orderDetailOptions != null ?
                new ObjectParameter("OrderDetailOptions", orderDetailOptions) :
                new ObjectParameter("OrderDetailOptions", typeof(string));
    
            var orderDetailAdonsParameter = orderDetailAdons != null ?
                new ObjectParameter("OrderDetailAdons", orderDetailAdons) :
                new ObjectParameter("OrderDetailAdons", typeof(string));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderDetails_AddOrderDetailsBulk", orderDetailXmlParameter, orderDetailOptionsParameter, orderDetailAdonsParameter, orderIdParameter);
        }
    
        public virtual ObjectResult<string> OrderDetails_GetOrderDetailAdonsByOrderDetailId(Nullable<long> orderDetailId)
        {
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("OrderDetails_GetOrderDetailAdonsByOrderDetailId", orderDetailIdParameter);
        }
    
        public virtual ObjectResult<string> OrderDetails_GetOrderDetailOptionsByOrderDetailId(Nullable<long> orderDetailId)
        {
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("OrderDetails_GetOrderDetailOptionsByOrderDetailId", orderDetailIdParameter);
        }
    
        public virtual int OrderDetailSubProduct_AddOrderDetailSubProductBulk(string orderDetailSubProducts, Nullable<long> orderDetailId)
        {
            var orderDetailSubProductsParameter = orderDetailSubProducts != null ?
                new ObjectParameter("OrderDetailSubProducts", orderDetailSubProducts) :
                new ObjectParameter("OrderDetailSubProducts", typeof(string));
    
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderDetailSubProduct_AddOrderDetailSubProductBulk", orderDetailSubProductsParameter, orderDetailIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Orders_AddOrder(Nullable<System.DateTime> deliverDate, Nullable<long> contactInfoId, Nullable<int> orderStatusId, Nullable<int> branchId, Nullable<double> orderTotal, Nullable<double> deliveryCharges, string deliveryAddress, Nullable<short> orderTypeId, Nullable<double> discount, Nullable<double> taxPercentage, Nullable<short> paymentMethod, Nullable<int> promotionCodeId, Nullable<double> promotionValueUsed, string orderDetailXml)
        {
            var deliverDateParameter = deliverDate.HasValue ?
                new ObjectParameter("DeliverDate", deliverDate) :
                new ObjectParameter("DeliverDate", typeof(System.DateTime));
    
            var contactInfoIdParameter = contactInfoId.HasValue ?
                new ObjectParameter("ContactInfoId", contactInfoId) :
                new ObjectParameter("ContactInfoId", typeof(long));
    
            var orderStatusIdParameter = orderStatusId.HasValue ?
                new ObjectParameter("OrderStatusId", orderStatusId) :
                new ObjectParameter("OrderStatusId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var orderTotalParameter = orderTotal.HasValue ?
                new ObjectParameter("OrderTotal", orderTotal) :
                new ObjectParameter("OrderTotal", typeof(double));
    
            var deliveryChargesParameter = deliveryCharges.HasValue ?
                new ObjectParameter("DeliveryCharges", deliveryCharges) :
                new ObjectParameter("DeliveryCharges", typeof(double));
    
            var deliveryAddressParameter = deliveryAddress != null ?
                new ObjectParameter("DeliveryAddress", deliveryAddress) :
                new ObjectParameter("DeliveryAddress", typeof(string));
    
            var orderTypeIdParameter = orderTypeId.HasValue ?
                new ObjectParameter("OrderTypeId", orderTypeId) :
                new ObjectParameter("OrderTypeId", typeof(short));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var taxPercentageParameter = taxPercentage.HasValue ?
                new ObjectParameter("TaxPercentage", taxPercentage) :
                new ObjectParameter("TaxPercentage", typeof(double));
    
            var paymentMethodParameter = paymentMethod.HasValue ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(short));
    
            var promotionCodeIdParameter = promotionCodeId.HasValue ?
                new ObjectParameter("PromotionCodeId", promotionCodeId) :
                new ObjectParameter("PromotionCodeId", typeof(int));
    
            var promotionValueUsedParameter = promotionValueUsed.HasValue ?
                new ObjectParameter("PromotionValueUsed", promotionValueUsed) :
                new ObjectParameter("PromotionValueUsed", typeof(double));
    
            var orderDetailXmlParameter = orderDetailXml != null ?
                new ObjectParameter("OrderDetailXml", orderDetailXml) :
                new ObjectParameter("OrderDetailXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Orders_AddOrder", deliverDateParameter, contactInfoIdParameter, orderStatusIdParameter, branchIdParameter, orderTotalParameter, deliveryChargesParameter, deliveryAddressParameter, orderTypeIdParameter, discountParameter, taxPercentageParameter, paymentMethodParameter, promotionCodeIdParameter, promotionValueUsedParameter, orderDetailXmlParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Orders_DeleteOrder(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Orders_DeleteOrder", orderIDParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrder_Result> Orders_GetOrder(Nullable<int> branchId, Nullable<int> orderStatusId, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var orderStatusIdParameter = orderStatusId.HasValue ?
                new ObjectParameter("OrderStatusId", orderStatusId) :
                new ObjectParameter("OrderStatusId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrder_Result>("Orders_GetOrder", branchIdParameter, orderStatusIdParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrderByContactInfoId_Result> Orders_GetOrderByContactInfoId(Nullable<int> branchId, Nullable<long> contactInfoId, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var contactInfoIdParameter = contactInfoId.HasValue ?
                new ObjectParameter("ContactInfoId", contactInfoId) :
                new ObjectParameter("ContactInfoId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderByContactInfoId_Result>("Orders_GetOrderByContactInfoId", branchIdParameter, contactInfoIdParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrderById_Result> Orders_GetOrderById(Nullable<long> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderById_Result>("Orders_GetOrderById", orderIdParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrderByUser_Result> Orders_GetOrderByUser(Nullable<int> branchId, Nullable<int> contactInfoId, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var contactInfoIdParameter = contactInfoId.HasValue ?
                new ObjectParameter("ContactInfoId", contactInfoId) :
                new ObjectParameter("ContactInfoId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderByUser_Result>("Orders_GetOrderByUser", branchIdParameter, contactInfoIdParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Orders_OrderDelivered(Nullable<long> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Orders_OrderDelivered", orderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Orders_OrderPaid(Nullable<long> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Orders_OrderPaid", orderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Product_AddComboProducts(string productsXml)
        {
            var productsXmlParameter = productsXml != null ?
                new ObjectParameter("ProductsXml", productsXml) :
                new ObjectParameter("ProductsXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Product_AddComboProducts", productsXmlParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Product_AddProduct(Nullable<short> categoryID, string name, string description, string image, string imagePath, Nullable<bool> isActive, Nullable<bool> isSpecial, Nullable<short> displayOrder, string days, Nullable<bool> displayOnFullDay, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var isSpecialParameter = isSpecial.HasValue ?
                new ObjectParameter("IsSpecial", isSpecial) :
                new ObjectParameter("IsSpecial", typeof(bool));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(short));
    
            var daysParameter = days != null ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(string));
    
            var displayOnFullDayParameter = displayOnFullDay.HasValue ?
                new ObjectParameter("DisplayOnFullDay", displayOnFullDay) :
                new ObjectParameter("DisplayOnFullDay", typeof(bool));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Product_AddProduct", categoryIDParameter, nameParameter, descriptionParameter, imageParameter, imagePathParameter, isActiveParameter, isSpecialParameter, displayOrderParameter, daysParameter, displayOnFullDayParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Product_DeleteBranchProductAdonType(Nullable<int> productAdonTypeId)
        {
            var productAdonTypeIdParameter = productAdonTypeId.HasValue ?
                new ObjectParameter("ProductAdonTypeId", productAdonTypeId) :
                new ObjectParameter("ProductAdonTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Product_DeleteBranchProductAdonType", productAdonTypeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Product_DeleteBranchProductOptionType(Nullable<int> productOptionTypeId)
        {
            var productOptionTypeIdParameter = productOptionTypeId.HasValue ?
                new ObjectParameter("ProductOptionTypeId", productOptionTypeId) :
                new ObjectParameter("ProductOptionTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Product_DeleteBranchProductOptionType", productOptionTypeIdParameter);
        }
    
        public virtual ObjectResult<Product_GetAdonByProductId_Result> Product_GetAdonByProductId(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetAdonByProductId_Result>("Product_GetAdonByProductId", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetAdonForDeal_Result> Product_GetAdonForDeal(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetAdonForDeal_Result>("Product_GetAdonForDeal", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetDealAdonByProductId_Result> Product_GetDealAdonByProductId(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetDealAdonByProductId_Result>("Product_GetDealAdonByProductId", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetDealOptionsByProductId_Result> Product_GetDealOptionsByProductId(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetDealOptionsByProductId_Result>("Product_GetDealOptionsByProductId", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetDealProductsByProductId_Result> Product_GetDealProductsByProductId(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetDealProductsByProductId_Result>("Product_GetDealProductsByProductId", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetDealProductsByProductIdForOrder_Result> Product_GetDealProductsByProductIdForOrder(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetDealProductsByProductIdForOrder_Result>("Product_GetDealProductsByProductIdForOrder", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetHomePageProducts_Result> Product_GetHomePageProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetHomePageProducts_Result>("Product_GetHomePageProducts");
        }
    
        public virtual ObjectResult<Product_GetOptionsForDeal_Result> Product_GetOptionsForDeal(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetOptionsForDeal_Result>("Product_GetOptionsForDeal", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetOptionTypeByProductId_Result> Product_GetOptionTypeByProductId(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetOptionTypeByProductId_Result>("Product_GetOptionTypeByProductId", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetProductByCategoryId_Result> Product_GetProductByCategoryId(Nullable<short> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetProductByCategoryId_Result>("Product_GetProductByCategoryId", categoryIdParameter);
        }
    
        public virtual ObjectResult<Product_GetProductById_Result> Product_GetProductById(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetProductById_Result>("Product_GetProductById", productIdParameter);
        }
    
        public virtual ObjectResult<Product_GetProductDetails_Result> Product_GetProductDetails(Nullable<long> branchProductId)
        {
            var branchProductIdParameter = branchProductId.HasValue ?
                new ObjectParameter("BranchProductId", branchProductId) :
                new ObjectParameter("BranchProductId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetProductDetails_Result>("Product_GetProductDetails", branchProductIdParameter);
        }
    
        public virtual ObjectResult<Product_GetProductsForDeal_Result> Product_GetProductsForDeal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetProductsForDeal_Result>("Product_GetProductsForDeal");
        }
    
        public virtual ObjectResult<Product_GetProductsNotInBranch_Result> Product_GetProductsNotInBranch(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product_GetProductsNotInBranch_Result>("Product_GetProductsNotInBranch", branchIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Product_UpdateProduct(Nullable<int> productID, Nullable<short> categoryID, string name, string description, string image, string imagePath, Nullable<bool> isActive, Nullable<bool> isSpecial, Nullable<short> displayOrder, string days, Nullable<bool> displayOnFullDay, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var isSpecialParameter = isSpecial.HasValue ?
                new ObjectParameter("IsSpecial", isSpecial) :
                new ObjectParameter("IsSpecial", typeof(bool));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(short));
    
            var daysParameter = days != null ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(string));
    
            var displayOnFullDayParameter = displayOnFullDay.HasValue ?
                new ObjectParameter("DisplayOnFullDay", displayOnFullDay) :
                new ObjectParameter("DisplayOnFullDay", typeof(bool));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Product_UpdateProduct", productIDParameter, categoryIDParameter, nameParameter, descriptionParameter, imageParameter, imagePathParameter, isActiveParameter, isSpecialParameter, displayOrderParameter, daysParameter, displayOnFullDayParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProductCategories_DeleteProductCategory(Nullable<short> productCategoryId)
        {
            var productCategoryIdParameter = productCategoryId.HasValue ?
                new ObjectParameter("ProductCategoryId", productCategoryId) :
                new ObjectParameter("ProductCategoryId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProductCategories_DeleteProductCategory", productCategoryIdParameter);
        }
    
        public virtual ObjectResult<ProductCategories_GetAllProductCategories_Result> ProductCategories_GetAllProductCategories(Nullable<int> branchId, Nullable<bool> displayOnWeb)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var displayOnWebParameter = displayOnWeb.HasValue ?
                new ObjectParameter("DisplayOnWeb", displayOnWeb) :
                new ObjectParameter("DisplayOnWeb", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductCategories_GetAllProductCategories_Result>("ProductCategories_GetAllProductCategories", branchIdParameter, displayOnWebParameter);
        }
    
        public virtual ObjectResult<ProductCategories_GetProductCategories_Result> ProductCategories_GetProductCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductCategories_GetProductCategories_Result>("ProductCategories_GetProductCategories");
        }
    
        public virtual ObjectResult<Nullable<int>> ProductChildAdon_AddProductChildAdonBulk(string productChildAdonXml)
        {
            var productChildAdonXmlParameter = productChildAdonXml != null ?
                new ObjectParameter("ProductChildAdonXml", productChildAdonXml) :
                new ObjectParameter("ProductChildAdonXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProductChildAdon_AddProductChildAdonBulk", productChildAdonXmlParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProductChildProductOption_AddProductChildProductOptionBulk(string productChildProductOptionXml)
        {
            var productChildProductOptionXmlParameter = productChildProductOptionXml != null ?
                new ObjectParameter("ProductChildProductOptionXml", productChildProductOptionXml) :
                new ObjectParameter("ProductChildProductOptionXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProductChildProductOption_AddProductChildProductOptionBulk", productChildProductOptionXmlParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProductOptionsInProducts_AddProductOptionsInProducts(Nullable<int> branchId, Nullable<int> productId, Nullable<short> optionTypeId, Nullable<bool> isMultiSelect, Nullable<bool> isSamePrice, Nullable<bool> isAdonPriceVary, Nullable<bool> isProductPriceChangeType, string productOptionInProductsXml)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var optionTypeIdParameter = optionTypeId.HasValue ?
                new ObjectParameter("OptionTypeId", optionTypeId) :
                new ObjectParameter("OptionTypeId", typeof(short));
    
            var isMultiSelectParameter = isMultiSelect.HasValue ?
                new ObjectParameter("IsMultiSelect", isMultiSelect) :
                new ObjectParameter("IsMultiSelect", typeof(bool));
    
            var isSamePriceParameter = isSamePrice.HasValue ?
                new ObjectParameter("IsSamePrice", isSamePrice) :
                new ObjectParameter("IsSamePrice", typeof(bool));
    
            var isAdonPriceVaryParameter = isAdonPriceVary.HasValue ?
                new ObjectParameter("IsAdonPriceVary", isAdonPriceVary) :
                new ObjectParameter("IsAdonPriceVary", typeof(bool));
    
            var isProductPriceChangeTypeParameter = isProductPriceChangeType.HasValue ?
                new ObjectParameter("IsProductPriceChangeType", isProductPriceChangeType) :
                new ObjectParameter("IsProductPriceChangeType", typeof(bool));
    
            var productOptionInProductsXmlParameter = productOptionInProductsXml != null ?
                new ObjectParameter("ProductOptionInProductsXml", productOptionInProductsXml) :
                new ObjectParameter("ProductOptionInProductsXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProductOptionsInProducts_AddProductOptionsInProducts", branchIdParameter, productIdParameter, optionTypeIdParameter, isMultiSelectParameter, isSamePriceParameter, isAdonPriceVaryParameter, isProductPriceChangeTypeParameter, productOptionInProductsXmlParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> PromotionCode_AddPromotionCode(string promotionName, string promotionCode, Nullable<short> typeOfPromotion, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<double> promotionValue, Nullable<int> codeUsageCounter)
        {
            var promotionNameParameter = promotionName != null ?
                new ObjectParameter("PromotionName", promotionName) :
                new ObjectParameter("PromotionName", typeof(string));
    
            var promotionCodeParameter = promotionCode != null ?
                new ObjectParameter("PromotionCode", promotionCode) :
                new ObjectParameter("PromotionCode", typeof(string));
    
            var typeOfPromotionParameter = typeOfPromotion.HasValue ?
                new ObjectParameter("TypeOfPromotion", typeOfPromotion) :
                new ObjectParameter("TypeOfPromotion", typeof(short));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promotionValueParameter = promotionValue.HasValue ?
                new ObjectParameter("PromotionValue", promotionValue) :
                new ObjectParameter("PromotionValue", typeof(double));
    
            var codeUsageCounterParameter = codeUsageCounter.HasValue ?
                new ObjectParameter("CodeUsageCounter", codeUsageCounter) :
                new ObjectParameter("CodeUsageCounter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("PromotionCode_AddPromotionCode", promotionNameParameter, promotionCodeParameter, typeOfPromotionParameter, startDateParameter, endDateParameter, promotionValueParameter, codeUsageCounterParameter);
        }
    
        public virtual ObjectResult<PromotionCode_GetPromotionCode_Result> PromotionCode_GetPromotionCode(string promotionName, string promotionCode, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var promotionNameParameter = promotionName != null ?
                new ObjectParameter("PromotionName", promotionName) :
                new ObjectParameter("PromotionName", typeof(string));
    
            var promotionCodeParameter = promotionCode != null ?
                new ObjectParameter("PromotionCode", promotionCode) :
                new ObjectParameter("PromotionCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PromotionCode_GetPromotionCode_Result>("PromotionCode_GetPromotionCode", promotionNameParameter, promotionCodeParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<PromotionCode_GetPromotionCodeByCode_Result> PromotionCode_GetPromotionCodeByCode(string promotionCode)
        {
            var promotionCodeParameter = promotionCode != null ?
                new ObjectParameter("PromotionCode", promotionCode) :
                new ObjectParameter("PromotionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PromotionCode_GetPromotionCodeByCode_Result>("PromotionCode_GetPromotionCodeByCode", promotionCodeParameter);
        }
    
        public virtual ObjectResult<PromotionCode_GetPromotionCodeById_Result> PromotionCode_GetPromotionCodeById(Nullable<int> promotionCodeId)
        {
            var promotionCodeIdParameter = promotionCodeId.HasValue ?
                new ObjectParameter("PromotionCodeId", promotionCodeId) :
                new ObjectParameter("PromotionCodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PromotionCode_GetPromotionCodeById_Result>("PromotionCode_GetPromotionCodeById", promotionCodeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PromotionCode_UpdatePromotionCode(Nullable<int> promotionCodeId, string promotionName, string promotionCode, Nullable<short> typeOfPromotion, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<double> promotionValue, Nullable<int> codeUsageCounter)
        {
            var promotionCodeIdParameter = promotionCodeId.HasValue ?
                new ObjectParameter("PromotionCodeId", promotionCodeId) :
                new ObjectParameter("PromotionCodeId", typeof(int));
    
            var promotionNameParameter = promotionName != null ?
                new ObjectParameter("PromotionName", promotionName) :
                new ObjectParameter("PromotionName", typeof(string));
    
            var promotionCodeParameter = promotionCode != null ?
                new ObjectParameter("PromotionCode", promotionCode) :
                new ObjectParameter("PromotionCode", typeof(string));
    
            var typeOfPromotionParameter = typeOfPromotion.HasValue ?
                new ObjectParameter("TypeOfPromotion", typeOfPromotion) :
                new ObjectParameter("TypeOfPromotion", typeof(short));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promotionValueParameter = promotionValue.HasValue ?
                new ObjectParameter("PromotionValue", promotionValue) :
                new ObjectParameter("PromotionValue", typeof(double));
    
            var codeUsageCounterParameter = codeUsageCounter.HasValue ?
                new ObjectParameter("CodeUsageCounter", codeUsageCounter) :
                new ObjectParameter("CodeUsageCounter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PromotionCode_UpdatePromotionCode", promotionCodeIdParameter, promotionNameParameter, promotionCodeParameter, typeOfPromotionParameter, startDateParameter, endDateParameter, promotionValueParameter, codeUsageCounterParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SliderImage_AddUpdateSliderImage(Nullable<int> sliderImageId, string imageName, string imagePath, string description, Nullable<bool> isEnabled)
        {
            var sliderImageIdParameter = sliderImageId.HasValue ?
                new ObjectParameter("SliderImageId", sliderImageId) :
                new ObjectParameter("SliderImageId", typeof(int));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isEnabledParameter = isEnabled.HasValue ?
                new ObjectParameter("IsEnabled", isEnabled) :
                new ObjectParameter("IsEnabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SliderImage_AddUpdateSliderImage", sliderImageIdParameter, imageNameParameter, imagePathParameter, descriptionParameter, isEnabledParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SliderImage_DeleteSliderImage(Nullable<int> sliderImageId)
        {
            var sliderImageIdParameter = sliderImageId.HasValue ?
                new ObjectParameter("SliderImageId", sliderImageId) :
                new ObjectParameter("SliderImageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SliderImage_DeleteSliderImage", sliderImageIdParameter);
        }
    
        public virtual ObjectResult<SliderImage_GetHomePageSliders_Result> SliderImage_GetHomePageSliders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SliderImage_GetHomePageSliders_Result>("SliderImage_GetHomePageSliders");
        }
    
        public virtual ObjectResult<SliderImage_GetSliders_Result> SliderImage_GetSliders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SliderImage_GetSliders_Result>("SliderImage_GetSliders");
        }
    
        public virtual ObjectResult<Users_GetUsersBillingAddressByUserId_Result> Users_GetUsersBillingAddressByUserId(Nullable<int> userLoginId)
        {
            var userLoginIdParameter = userLoginId.HasValue ?
                new ObjectParameter("UserLoginId", userLoginId) :
                new ObjectParameter("UserLoginId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users_GetUsersBillingAddressByUserId_Result>("Users_GetUsersBillingAddressByUserId", userLoginIdParameter);
        }
    
        public virtual ObjectResult<Users_ValidateUser_Result> Users_ValidateUser(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users_ValidateUser_Result>("Users_ValidateUser", usernameParameter, passwordParameter);
        }
    }
}
